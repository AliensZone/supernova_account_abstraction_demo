(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{8677:function(){},2808:function(){},9159:function(){},6601:function(){},9214:function(){},8971:function(){},2361:function(){},4616:function(){},6906:function(e,t,n){Promise.resolve().then(n.bind(n,7316))},7316:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return E}});var a=n(7437),i=n(3246),s=n(2265),r=n(6244),p=n(6765),l=n(4460),y=n(1728),u=n(9210),o=n(3407),d=n(359),c=n(8810),m=JSON.parse('[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":false,"internalType":"bytes","name":"bitcoin_address","type":"bytes"}],"name":"BitcoinAccountInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"uint256[]","name":"value","type":"uint256[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getBitcoinAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_bitcoin_address","type":"bytes"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]'),b=JSON.parse('[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"accountImplementation","outputs":[{"internalType":"contract BitcoinAccount","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"owner_bitcoin_address","type":"bytes"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"contract BitcoinAccount","name":"ret","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"owner_bitcoin_address","type":"bytes"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]'),f=JSON.parse('[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requiredPrefund","type":"uint256"}],"name":"RequiredPreFund","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"callData","type":"bytes"},{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"paymasterVerificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"paymasterPostOpGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"}],"internalType":"struct EntryPoint.MemoryUserOp","name":"mUserOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"uint256","name":"contextOffset","type":"uint256"},{"internalType":"uint256","name":"preOpGas","type":"uint256"}],"internalType":"struct EntryPoint.UserOpInfo","name":"opInfo","type":"tuple"},{"internalType":"bytes","name":"context","type":"bytes"}],"name":"innerHandleOp","outputs":[{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint192","name":"","type":"uint192"}],"name":"nonceSequenceNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]'),T=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"BalanceChangeEvent","type":"event"},{"inputs":[],"name":"getAccountBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setAccountBalance","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),x=n(7669),h=n(8624);let g=new x.r("https://rpc.supernova.zenon.red"),v=h.Wallet.fromMnemonic("hood focus chest license repair vocal avocado above into vicious silent exit").connect(g),w="0x319B86eb05A3210646Dc014e23F5d73ffcC8A996";n(8625);var N=n(5817),A=n(9758),P=n(8487);n(2957).Buffer;let G={sender:N.d,nonce:0,initCode:"0x",callData:"0x",callGasLimit:0,verificationGasLimit:15e4,preVerificationGas:21e3,maxFeePerGas:0,maxPriorityFeePerGas:1e9,paymaster:N.d,paymasterData:"0x",paymasterVerificationGasLimit:3e5,paymasterPostOpGasLimit:0,signature:"0x"},k={1:"assert(false)",17:"arithmetic overflow/underflow",18:"divide by zero",33:"invalid enum value",34:"storage byte array that is incorrectly encoded",49:".pop() on an empty array.",50:"array out-of-bounds or negative index",65:"memory overflow",81:"zero-initialized variable of internal function type"},C=new P.Interface(["error ECDSAInvalidSignature()"]);function O(e,t){return e&&"object"==typeof e&&t in e?e[t]:null}async function j(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"getNonce";return L(await D(e,t,n))}async function D(e,t){var n,a;let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"getNonce",s={...e},r=null==t?void 0:t.provider;if(null!=e.initCode){let e=(0,P.hexDataSlice)(s.initCode,0,20),n=(0,P.hexDataSlice)(s.initCode,20);if(null==s.nonce&&(s.nonce=0),null==s.verificationGasLimit){if(null==r)throw Error("no entrypoint/provider");let a=await r.estimateGas({from:null==t?void 0:t.address,to:e,data:n,gasLimit:1e7});s.verificationGasLimit=u.O$.from(G.verificationGasLimit).add(a)}}if(null==s.nonce){if(null==r)throw Error("must have entryPoint to autofill nonce");let t=new l.CH(e.sender,["function ".concat(i,"() view returns(uint256)")],r);s.nonce=await t[i]().catch(function(){let e=Error().stack.replace(/Error.*\n.*at.*\n/,"").replace(/.*at.* \(internal[\s\S]*/,"");if(null!=arguments[0])throw Error("must use .catch(rethrow()), and NOT .catch(rethrow)");return function(t){let n;let a=t.stack.match(/((?:.* at .*\.sol.*\n)+)/),i=(null!=a?a[1]:"")+e,s=/error=.*?"data":"(.*?)"/.exec(t.message);if(null!=s){var r;let e=s[1];n=null!==(r=function e(t){var n,a,i;let s=!(arguments.length>1)||void 0===arguments[1]||arguments[1];if("string"!=typeof t){let e=t;if("string"!=typeof(t=null!==(a=e.data)&&void 0!==a?a:null===(n=e.error)||void 0===n?void 0:n.data))throw e}let r=t.slice(0,10),p="0x"+t.slice(10);if("0x08c379a0"===r){let[e]=A.$.decode(["string"],p);return"Error(".concat(e,")")}if("0x4e487b71"===r){let[e]=A.$.decode(["uint256"],p);return"Panic(".concat(null!==(i=k[e])&&void 0!==i?i:e," + ')")}try{let n=C.parseError(t),a=n.args.map((t,a)=>{switch(n.errorFragment.inputs[a].type){case"bytes":return e(t);case"string":return'"'.concat(t,'"');default:return t}});return"".concat(n.name,"(").concat(a.join(","),")")}catch(e){if(!s)return t;return null}}(e))&&void 0!==r?r:t.message+" - "+e.slice(0,100)}else n=t.message;let p=Error(n);throw p.stack="Error: "+n+"\n"+i,p}}())}if(null==s.callGasLimit&&null!=e.callData){if(null==r)throw Error("must have entryPoint for callGasLimit estimate");let e=await r.estimateGas({from:null==t?void 0:t.address,to:s.sender,data:s.callData});s.callGasLimit=e}if(null!=s.paymaster&&(null==s.paymasterVerificationGasLimit&&(s.paymasterVerificationGasLimit=G.paymasterVerificationGasLimit),null==s.paymasterPostOpGasLimit&&(s.paymasterPostOpGasLimit=G.paymasterPostOpGasLimit)),null==s.maxFeePerGas){if(null==r)throw Error("must have entryPoint to autofill maxFeePerGas");let e=await r.getBlock("latest");s.maxFeePerGas=e.baseFeePerGas.add(null!==(n=s.maxPriorityFeePerGas)&&void 0!==n?n:G.maxPriorityFeePerGas)}null==s.maxPriorityFeePerGas&&(s.maxPriorityFeePerGas=G.maxPriorityFeePerGas);let p=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:G,n={...e};for(let e in n)null==n[e]&&delete n[e];return{...t,...n}}(s);return"0"===p.preVerificationGas.toString()&&(p.preVerificationGas=(a=S(p,!1),c.arrayify(a).map(e=>0===e?4:16).reduce((e,t)=>e+t))),p}function S(e){let t=!(arguments.length>1)||void 0===arguments[1]||arguments[1],n=L(e);return t?P.defaultAbiCoder.encode(["address","uint256","bytes32","bytes32","bytes32","uint256","bytes32","bytes32"],[n.sender,n.nonce,(0,P.keccak256)(n.initCode),(0,P.keccak256)(n.callData),n.accountGasLimits,n.preVerificationGas,n.gasFees,(0,P.keccak256)(n.paymasterAndData)]):P.defaultAbiCoder.encode(["address","uint256","bytes","bytes","bytes32","uint256","bytes32","bytes","bytes"],[n.sender,n.nonce,n.initCode,n.callData,n.accountGasLimits,n.preVerificationGas,n.gasFees,n.paymasterAndData,n.signature])}function L(e){var t,n,a,i,s;let r=M(e.verificationGasLimit,e.callGasLimit),p=M(e.maxPriorityFeePerGas,e.maxFeePerGas),l="0x";return(null===(t=e.paymaster)||void 0===t?void 0:t.length)>=20&&e.paymaster!==N.d&&(n=e.paymaster,a=e.paymasterVerificationGasLimit,i=e.paymasterPostOpGasLimit,s=e.paymasterData,l=c.hexConcat([n,(0,P.hexZeroPad)((0,P.hexlify)(a,{hexPad:"left"}),16),(0,P.hexZeroPad)((0,P.hexlify)(i,{hexPad:"left"}),16),s])),{sender:e.sender,nonce:e.nonce,callData:e.callData,accountGasLimits:r,initCode:e.initCode,preVerificationGas:e.preVerificationGas,gasFees:p,paymasterAndData:l,signature:e.signature}}function M(e,t){return c.hexConcat([(0,P.hexZeroPad)((0,P.hexlify)(e,{hexPad:"left"}),16),(0,P.hexZeroPad)((0,P.hexlify)(t,{hexPad:"left"}),16)])}var F=n(2957).Buffer;function E(){let e=new l.CH("0x4f5aD4CBc8F6F21bd6Ecd0E37d844f7a4CDBA87A",f,g),t=new l.CH("0x9892B065db43CF67f027b7b22f716C66a61706DD",b,g),n=new l.CH(w,T,g),[x,h]=(0,s.useState)("Loaded"),[N,A]=(0,s.useState)(!1),[G,k]=(0,s.useState)("N/A"),[C,L]=(0,s.useState)("N/A"),[M,E]=(0,s.useState)("N/A"),[R,I]=(0,s.useState)("N/A"),[U,B]=(0,s.useState)("N/A"),[V,_]=(0,s.useState)(100),[H,z]=(0,s.useState)("N/A"),[J,W]=(0,s.useState)("Connect"),[Z,q]=(0,s.useState)(),[$,Y]=(0,s.useState)([]),K=async()=>{if(k("N/A"),L("N/A"),E("N/A"),I("N/A"),B("N/A"),z("N/A"),N)p.ZP.disconnect(),A(!1),W("Connect");else try{let e=await p.ZP.request("getAccounts",{purposes:[p.xJ.Ordinals,p.xJ.Payment]});if("success"===String(O(e,"status"))){await (0,r.yl)();let t=O(e,"result"),n="",a=[];for(let e=0;e<t.length;e++){let i=t[e];if(i.address!=n){n=i.address;let e={address:i.address,addressType:i.addressType,publicKey:i.publicKey};a.push(e)}}Y(a),q(a[0]),A(!0),W("Disconnect")}else{let t=O(e,"error");console.error("Wallet NOT Connected"),String(O(t,"message"))}}catch(e){console.error("Wallet NOT Connected"),String(O(e,"message"))}},Q=async()=>{if(h("Loading ... "),Z){let e=y.Y0(Z.address);k(await t.getAddress(e,0))}h("Loaded")},X=async()=>{if(h("Loading ... "),Z){let e=y.Y0(Z.address),n=await t.connect(v).createAccount(e,0,{gasLimit:3e7});1==(await n.wait()).status?L(G):L("N/A")}h("Loaded")},ee=async()=>{if(h("Loading ... "),"N/A"!=C){let t=await e.balanceOf(C),n=await g.getBalance(C),a=u.O$.from(t).toString(),i=u.O$.from(n).toString();E(a),I(i)}h("Loaded")},et=async()=>{if(h("Loading ... "),"N/A"!=C){let t=await e.connect(v).depositTo(C,{gasLimit:9999999,value:5e15});console.log("receiptTxFundEntryPoint.status",(await t.wait()).status),B("Funded ... check balance!")}h("Loaded")},en=async()=>{k("N/A"),L("N/A"),E("N/A"),I("N/A"),B("N/A"),z("N/A")},ea=async()=>{if(h("Loading ... "),Z){var t;let a=new o.vU(m),i=n.interface.encodeFunctionData("setAccountBalance",[V]),s={sender:C,callData:a.encodeFunctionData("execute",[w,0,i]),verificationGasLimit:3e6},r=await j(s,e),l=(t=await D(s,e),e.address,(0,P.keccak256)(S(t,!0))),y=F.from(l.slice(2),"hex"),u=d.c(y),b=await p.ZP.request("signMessage",{address:Z.address,message:u});if("success"===String(O(b,"status"))){let t=O(b,"result"),a=O(t,"signature");d.J(a),r.signature=c.hexlify(d.J(a));try{let t=await e.connect(v).handleOps([r],v.getAddress(),{gasLimit:3e7});await t.wait()}catch(e){}let i=await n.getAccountBalance();i==V?z("Success "+i):z("Failed "+i)}else console.log("responseError",O(b,"error"))}else console.log("You have not defined a signing address! Connect your wallet first!");h("Loaded")};return(0,a.jsx)("div",{className:"grid grid-rows-[20px_1fr_20px] items-center justify-items-center p-8 pb-20 font-[family-name:var(--font-geist-sans)]",children:(0,a.jsxs)("main",{className:"flex flex-col gap-4 row-start-2 items-center",children:[(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("p",{children:["Status: ",x]})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("button",{onClick:K,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:[" ",J," "]})}),!0==N&&(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)(i.R,{value:Z,onChange:q,children:(0,a.jsxs)("div",{className:"relative",children:[(0,a.jsxs)(i.R.Button,{className:"w-full bg-white text-black py-2 px-4 border rounded-md shadow-md cursor-pointer",children:[null==Z?void 0:Z.address," (",null==Z?void 0:Z.addressType,")"]}),(0,a.jsx)(i.R.Options,{className:"absolute w-full bg-white border rounded-md shadow-lg mt-2 max-h-60 overflow-auto",children:$.map(e=>(0,a.jsxs)(i.R.Option,{value:e,className:e=>{let{active:t}=e;return"cursor-pointer select-none py-2 px-4 ".concat(t?"bg-blue-500 text-white":"text-black")},children:[e.address," (",e.addressType,")"]},e.address))})]})})}),!0==N&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)("button",{onClick:Q,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:" Check Chain Allocated Address "})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("p",{children:["Future chain related account address: ",(0,a.jsx)("b",{children:G})]})})]}),!0==N&&"N/A"!=G&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)("button",{onClick:X,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:" Create Account "})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("p",{children:["Account created with address: ",(0,a.jsx)("b",{children:C})]})})]}),!0==N&&"N/A"!=G&&"N/A"!=C&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)("button",{onClick:ee,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:" Check Account Balances "})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("p",{children:["EntryPoint balance: ",(0,a.jsx)("b",{children:M}),", Native balance: ",(0,a.jsx)("b",{children:R})]})})]}),!0==N&&"N/A"!=G&&"N/A"!=C&&"N/A"!=M&&"N/A"!=R&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)("button",{onClick:et,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:" Fund Account "})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("p",{children:["Funding status: ",U]})})]}),!0==N&&"N/A"!=G&&"N/A"!=C&&"N/A"!=M&&"0"!=M&&"N/A"!=R&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)(i.R,{value:V,onChange:_,children:(0,a.jsxs)("div",{className:"relative",children:[(0,a.jsx)(i.R.Button,{className:"w-full bg-white text-black py-2 px-4 border rounded-md shadow-md cursor-pointer",children:V}),(0,a.jsxs)(i.R.Options,{className:"absolute w-full bg-white border rounded-md shadow-lg mt-2 max-h-60 overflow-auto",children:[(0,a.jsx)(i.R.Option,{value:100,className:e=>{let{active:t}=e;return"cursor-pointer select-none py-2 px-4 ".concat(t?"bg-blue-500 text-white":"text-black")},children:100},1),(0,a.jsx)(i.R.Option,{value:200,className:e=>{let{active:t}=e;return"cursor-pointer select-none py-2 px-4 ".concat(t?"bg-blue-500 text-white":"text-black")},children:200},2),(0,a.jsx)(i.R.Option,{value:300,className:e=>{let{active:t}=e;return"cursor-pointer select-none py-2 px-4 ".concat(t?"bg-blue-500 text-white":"text-black")},children:300},3)]})]})})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)("button",{onClick:ea,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:" Write Test "})}),(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsxs)("p",{children:["Test status: ",H]})})]}),!0==N&&(0,a.jsx)(a.Fragment,{children:(0,a.jsx)("div",{className:"flex items-center flex-col",children:(0,a.jsx)("button",{onClick:en,className:"bg-black text-white font-bold py-2 px-4 rounded-full hover:bg-gray-800",children:" Reset "})})})]})})}}},function(e){e.O(0,[756,971,117,744],function(){return e(e.s=6906)}),_N_E=e.O()}]);